" Misc --------------------------------------------------------------------{{{1

set guioptions-=tT  " Disable the toolbar and menu tearoffs
set guioptions-=m
"set guioptions-=m
set guitabtooltip=%{InfoGuiTooltip()}  " Info to show in tab tooltip

" scrollbars
set guioptions-=L
set guioptions-=B
set guioptions-=l
set guioptions-=r
set guioptions-=b

" Show tooltip for either fold contents or spelling suggestions
set ballooneval balloonexpr=FoldSpellBalloon()
" Mappings ----------------------------------------------------------------{{{1

nmap <silent> <leader>mb :ToggleMenubar<cr>
nmap <silent> <leader>tb :ToggleToolbar<cr>
if has("gui_running")
   " GUI is running or is about to start.
   " Maximize gvim window.
   set lines=999 columns=999
endif

" Functions ---------------------------------------------------------------{{{1

function! InfoGuiTooltip()
    let bufferlist = 'Buffers:'
    for i in tabpagebuflist()
        let buffername = bufname(i)
        if strlen(buffername) == 0
            let buffername = '[No Name]'
        endif
        let bufferlist .= "\n\t".fnamemodify(buffername,':t')
    endfor
    let buffername = bufname($)
    if buffername == ''
        return '[No Name]'
    endif
    return buffername."\n".bufferlist
endfunction

function! FoldSpellBalloon()
    let fold_start = foldclosed(v:beval_lnum)
    let fold_end = foldclosedend(v:beval_lnum)
    let lines = []
    " Detect if we are in a fold
    if fold_start < 0
        " We are not in a fold, so show spelling suggestions
        let lines = spellsuggest(spellbadword(v:beval_text)[0], 5, 0)
    else
        " We are in a fold, so show folded lines
        let num_lines = fold_end-fold_start+1
        " If we have too many lines in fold, show only the first/last 14
        if num_lines > 31
            let lines = getline(fold_start, fold_start+14)
            let lines += ['-- Snipped '.(num_lines-30).' lines --']
            let lines += getline(fold_end-14, fold_end)
        else
            " Less than 30 lines, lets show all of them
            let lines = getline(fold_start, fold_end)
        endif
    endif
    return join(lines, has("balloon_multiline") ? "\n" : " ")
endfunction

function! ToggleMenubar()
    if &guioptions =~ 'm'
        set guioptions-=m
    else
        set guioptions+=m
    endif
endfunction

function! ToggleToolbar()
    if &guioptions =~ 'T'
        set guioptions-=T
    else
        set guioptions+=T
    endif
endfunction

set guifont=Monospace\ 9

" Commands ----------------------------------------------------------------{{{1

command! -bar ToggleMenubar :call ToggleMenubar()
command! -bar ToggleToolbar :call ToggleToolbar()

